# Generated by Django 4.2.9 on 2024-03-29 16:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_amount', models.IntegerField(blank=True, null=True, verbose_name='Server Amount')),
                ('time_web_api_key', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Time Web API')),
                ('payment_system_api_key', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Payment System 1')),
            ],
        ),
        migrations.CreateModel(
            name='IncomeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.IntegerField(blank=True, null=True, verbose_name='Amount Total')),
            ],
        ),
        migrations.CreateModel(
            name='ReferralSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_1_percentage', models.IntegerField(blank=True, null=True, verbose_name='Level 1 Percentage')),
                ('level_2_percentage', models.IntegerField(blank=True, null=True, verbose_name='Level 2 Percentage')),
                ('level_3_percentage', models.IntegerField(blank=True, null=True, verbose_name='Level 3 Percentage')),
                ('level_4_percentage', models.IntegerField(blank=True, null=True, verbose_name='Level 4 Percentage')),
                ('level_5_percentage', models.IntegerField(blank=True, null=True, verbose_name='Level 5 Percentage')),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hosting', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Hosting')),
                ('ip_address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='IP Address')),
                ('user', models.CharField(blank=True, default='root', max_length=1000, null=True, verbose_name='user')),
                ('password', models.CharField(blank=True, default='<PASSWORD>', max_length=1000, null=True, verbose_name='password')),
                ('configuration', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Configuration')),
                ('rental_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Rental Price')),
                ('max_keys', models.IntegerField(blank=True, null=True, verbose_name='Max Keys')),
                ('keys_generated', models.IntegerField(blank=True, null=True, verbose_name='Keys')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('api_url', models.CharField(blank=True, max_length=1000, null=True, verbose_name='API URL')),
                ('cert_sha256', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Certificate SHA256')),
                ('script_out', models.TextField(blank=True, null=True, verbose_name='Script Out Info JSON')),
            ],
        ),
        migrations.CreateModel(
            name='TelegramBot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='Username')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('token', models.CharField(blank=True, max_length=255, null=True, verbose_name='Token')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name': 'Telegram Bot',
                'verbose_name_plural': 'Telegram Bots',
                'db_table': 'telegram_bots',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join_date', models.DateTimeField(auto_now_add=True, verbose_name='Joined at')),
                ('user_id', models.BigIntegerField(unique=True, verbose_name='user_id')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='username')),
                ('first_name', models.CharField(max_length=255, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last name')),
                ('is_banned', models.BooleanField(default=False, verbose_name='Is Banned')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Balance')),
                ('subscription_status', models.BooleanField(default=False, verbose_name='Subscription status')),
                ('subscription_expiration', models.DateTimeField(blank=True, null=True, verbose_name='Subscription expiration')),
            ],
            options={
                'verbose_name': 'Telegram User',
                'verbose_name_plural': 'Telegram Users',
                'db_table': 'telegram_users',
                'ordering': ['user_id'],
            },
        ),
        migrations.CreateModel(
            name='VpnKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Key')),
                ('is_limit', models.BooleanField()),
                ('data_limit', models.IntegerField(verbose_name='Data Limit GB')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.telegramuser')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('currency', models.CharField(blank=True, max_length=100, null=True, verbose_name='Currency')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.telegramuser')),
            ],
        ),
        migrations.CreateModel(
            name='TelegramReferral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=0, verbose_name='Level')),
                ('referred', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_referrals', to='bot.telegramuser')),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_referrals', to='bot.telegramuser')),
            ],
            options={
                'unique_together': {('referrer', 'referred')},
            },
        ),
    ]
